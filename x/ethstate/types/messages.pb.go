// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cosmicether/ethstate/v1/messages.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgGetSlotDataFromEth struct {
	ContractAddress string `protobuf:"bytes,1,opt,name=contractAddress,proto3" json:"contractAddress,omitempty"`
	Height          uint64 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Slot            string `protobuf:"bytes,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (m *MsgGetSlotDataFromEth) Reset()         { *m = MsgGetSlotDataFromEth{} }
func (m *MsgGetSlotDataFromEth) String() string { return proto.CompactTextString(m) }
func (*MsgGetSlotDataFromEth) ProtoMessage()    {}
func (*MsgGetSlotDataFromEth) Descriptor() ([]byte, []int) {
	return fileDescriptor_7414bb721aca4ea4, []int{0}
}
func (m *MsgGetSlotDataFromEth) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGetSlotDataFromEth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGetSlotDataFromEth.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGetSlotDataFromEth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGetSlotDataFromEth.Merge(m, src)
}
func (m *MsgGetSlotDataFromEth) XXX_Size() int {
	return m.Size()
}
func (m *MsgGetSlotDataFromEth) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGetSlotDataFromEth.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGetSlotDataFromEth proto.InternalMessageInfo

type MsgSubmitSlotData struct {
	SlotData    *SlotData `protobuf:"bytes,1,opt,name=slotData,proto3" json:"slotData,omitempty"`
	FromAddress string    `protobuf:"bytes,2,opt,name=from_address,json=fromAddress,proto3" json:"from_address,omitempty"`
}

func (m *MsgSubmitSlotData) Reset()         { *m = MsgSubmitSlotData{} }
func (m *MsgSubmitSlotData) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitSlotData) ProtoMessage()    {}
func (*MsgSubmitSlotData) Descriptor() ([]byte, []int) {
	return fileDescriptor_7414bb721aca4ea4, []int{1}
}
func (m *MsgSubmitSlotData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitSlotData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitSlotData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitSlotData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitSlotData.Merge(m, src)
}
func (m *MsgSubmitSlotData) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitSlotData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitSlotData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitSlotData proto.InternalMessageInfo

type MsgGetSlotDataFromEthResponse struct {
}

func (m *MsgGetSlotDataFromEthResponse) Reset()         { *m = MsgGetSlotDataFromEthResponse{} }
func (m *MsgGetSlotDataFromEthResponse) String() string { return proto.CompactTextString(m) }
func (*MsgGetSlotDataFromEthResponse) ProtoMessage()    {}
func (*MsgGetSlotDataFromEthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7414bb721aca4ea4, []int{2}
}
func (m *MsgGetSlotDataFromEthResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgGetSlotDataFromEthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgGetSlotDataFromEthResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgGetSlotDataFromEthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgGetSlotDataFromEthResponse.Merge(m, src)
}
func (m *MsgGetSlotDataFromEthResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgGetSlotDataFromEthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgGetSlotDataFromEthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgGetSlotDataFromEthResponse proto.InternalMessageInfo

type MsgSubmitSlotDataResponse struct {
}

func (m *MsgSubmitSlotDataResponse) Reset()         { *m = MsgSubmitSlotDataResponse{} }
func (m *MsgSubmitSlotDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitSlotDataResponse) ProtoMessage()    {}
func (*MsgSubmitSlotDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7414bb721aca4ea4, []int{3}
}
func (m *MsgSubmitSlotDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitSlotDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitSlotDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitSlotDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitSlotDataResponse.Merge(m, src)
}
func (m *MsgSubmitSlotDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitSlotDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitSlotDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitSlotDataResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgGetSlotDataFromEth)(nil), "cosmicether.ethstate.v1.MsgGetSlotDataFromEth")
	proto.RegisterType((*MsgSubmitSlotData)(nil), "cosmicether.ethstate.v1.MsgSubmitSlotData")
	proto.RegisterType((*MsgGetSlotDataFromEthResponse)(nil), "cosmicether.ethstate.v1.MsgGetSlotDataFromEthResponse")
	proto.RegisterType((*MsgSubmitSlotDataResponse)(nil), "cosmicether.ethstate.v1.MsgSubmitSlotDataResponse")
}

func init() {
	proto.RegisterFile("cosmicether/ethstate/v1/messages.proto", fileDescriptor_7414bb721aca4ea4)
}

var fileDescriptor_7414bb721aca4ea4 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x4b, 0xce, 0x2f, 0xce,
	0xcd, 0x4c, 0x4e, 0x2d, 0xc9, 0x48, 0x2d, 0xd2, 0x4f, 0x2d, 0xc9, 0x28, 0x2e, 0x49, 0x2c, 0x49,
	0xd5, 0x2f, 0x33, 0xd4, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x12, 0x47, 0x52, 0xa7, 0x07, 0x53, 0xa7, 0x57, 0x66, 0x28, 0x85, 0xd3, 0x00,
	0xb8, 0x22, 0xb0, 0x01, 0x52, 0x22, 0xe9, 0xf9, 0xe9, 0xf9, 0x60, 0xa6, 0x3e, 0x88, 0x05, 0x11,
	0x55, 0x2a, 0xe7, 0x12, 0xf5, 0x2d, 0x4e, 0x77, 0x4f, 0x2d, 0x09, 0xce, 0xc9, 0x2f, 0x71, 0x49,
	0x2c, 0x49, 0x74, 0x2b, 0xca, 0xcf, 0x75, 0x2d, 0xc9, 0x10, 0xd2, 0xe0, 0xe2, 0x4f, 0xce, 0xcf,
	0x2b, 0x29, 0x4a, 0x4c, 0x2e, 0x71, 0x4c, 0x49, 0x29, 0x4a, 0x2d, 0x2e, 0x96, 0x60, 0x54, 0x60,
	0xd4, 0xe0, 0x0c, 0x42, 0x17, 0x16, 0x12, 0xe3, 0x62, 0xcb, 0x48, 0xcd, 0x4c, 0xcf, 0x28, 0x91,
	0x60, 0x52, 0x60, 0xd4, 0x60, 0x09, 0x82, 0xf2, 0x84, 0x84, 0xb8, 0x58, 0x8a, 0x73, 0xf2, 0x4b,
	0x24, 0x98, 0xc1, 0xda, 0xc0, 0x6c, 0x2b, 0x8e, 0x8e, 0x05, 0xf2, 0x0c, 0x2f, 0x16, 0xc8, 0x33,
	0x28, 0x35, 0x30, 0x72, 0x09, 0xfa, 0x16, 0xa7, 0x07, 0x97, 0x26, 0xe5, 0x66, 0xc2, 0x2d, 0x17,
	0xb2, 0xe3, 0xe2, 0x28, 0x86, 0xb2, 0xc1, 0xd6, 0x71, 0x1b, 0x29, 0xe9, 0xe1, 0xf0, 0xb8, 0x1e,
	0x48, 0x61, 0x7c, 0x4a, 0x62, 0x49, 0x62, 0x10, 0x5c, 0x8f, 0x90, 0x22, 0x17, 0x4f, 0x5a, 0x51,
	0x7e, 0x6e, 0x7c, 0x22, 0xd4, 0xc9, 0x4c, 0x60, 0xbb, 0xb9, 0x41, 0x62, 0x50, 0xe7, 0x22, 0x39,
	0x41, 0x9e, 0x4b, 0x16, 0xab, 0xdf, 0x83, 0x52, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x95, 0xa4,
	0xb9, 0x24, 0x31, 0x9c, 0x08, 0x93, 0x34, 0xfa, 0xc9, 0xc8, 0xc5, 0xec, 0x5b, 0x9c, 0x2e, 0x54,
	0xc7, 0x25, 0x84, 0x25, 0xf8, 0xf4, 0x70, 0x3a, 0x1b, 0xab, 0x95, 0x52, 0x66, 0xa4, 0xa9, 0x87,
	0x3b, 0x91, 0x41, 0xa8, 0x88, 0x8b, 0x0f, 0x2d, 0x10, 0xb5, 0xf0, 0x99, 0x85, 0xaa, 0x56, 0xca,
	0x88, 0x78, 0xb5, 0x08, 0x3b, 0x9d, 0x7c, 0x4e, 0x3c, 0x92, 0x63, 0xbc, 0xf0, 0x48, 0x8e, 0xf1,
	0xc1, 0x23, 0x39, 0xc6, 0x09, 0x8f, 0xe5, 0x18, 0x2e, 0x3c, 0x96, 0x63, 0xb8, 0xf1, 0x58, 0x8e,
	0x21, 0xca, 0x28, 0x3d, 0xb3, 0x24, 0xa3, 0x34, 0x49, 0x2f, 0x39, 0x3f, 0x57, 0x3f, 0x31, 0x2b,
	0x31, 0xaf, 0x38, 0xb1, 0x28, 0xd3, 0xd2, 0x54, 0x1f, 0x39, 0x8d, 0x56, 0x20, 0x52, 0x69, 0x49,
	0x65, 0x41, 0x6a, 0x71, 0x12, 0x1b, 0x38, 0x29, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb0,
	0xba, 0x51, 0xfb, 0x0b, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	GetSlotDataFromEth(ctx context.Context, in *MsgGetSlotDataFromEth, opts ...grpc.CallOption) (*MsgGetSlotDataFromEthResponse, error)
	SubmitSlotData(ctx context.Context, in *MsgSubmitSlotData, opts ...grpc.CallOption) (*MsgSubmitSlotDataResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) GetSlotDataFromEth(ctx context.Context, in *MsgGetSlotDataFromEth, opts ...grpc.CallOption) (*MsgGetSlotDataFromEthResponse, error) {
	out := new(MsgGetSlotDataFromEthResponse)
	err := c.cc.Invoke(ctx, "/cosmicether.ethstate.v1.Msg/GetSlotDataFromEth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitSlotData(ctx context.Context, in *MsgSubmitSlotData, opts ...grpc.CallOption) (*MsgSubmitSlotDataResponse, error) {
	out := new(MsgSubmitSlotDataResponse)
	err := c.cc.Invoke(ctx, "/cosmicether.ethstate.v1.Msg/SubmitSlotData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	GetSlotDataFromEth(context.Context, *MsgGetSlotDataFromEth) (*MsgGetSlotDataFromEthResponse, error)
	SubmitSlotData(context.Context, *MsgSubmitSlotData) (*MsgSubmitSlotDataResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) GetSlotDataFromEth(ctx context.Context, req *MsgGetSlotDataFromEth) (*MsgGetSlotDataFromEthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSlotDataFromEth not implemented")
}
func (*UnimplementedMsgServer) SubmitSlotData(ctx context.Context, req *MsgSubmitSlotData) (*MsgSubmitSlotDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitSlotData not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_GetSlotDataFromEth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetSlotDataFromEth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).GetSlotDataFromEth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmicether.ethstate.v1.Msg/GetSlotDataFromEth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).GetSlotDataFromEth(ctx, req.(*MsgGetSlotDataFromEth))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitSlotData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitSlotData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitSlotData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cosmicether.ethstate.v1.Msg/SubmitSlotData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitSlotData(ctx, req.(*MsgSubmitSlotData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cosmicether.ethstate.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSlotDataFromEth",
			Handler:    _Msg_GetSlotDataFromEth_Handler,
		},
		{
			MethodName: "SubmitSlotData",
			Handler:    _Msg_SubmitSlotData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cosmicether/ethstate/v1/messages.proto",
}

func (m *MsgGetSlotDataFromEth) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGetSlotDataFromEth) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGetSlotDataFromEth) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Slot) > 0 {
		i -= len(m.Slot)
		copy(dAtA[i:], m.Slot)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.Slot)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Height != 0 {
		i = encodeVarintMessages(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ContractAddress) > 0 {
		i -= len(m.ContractAddress)
		copy(dAtA[i:], m.ContractAddress)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.ContractAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitSlotData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitSlotData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitSlotData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintMessages(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x12
	}
	if m.SlotData != nil {
		{
			size, err := m.SlotData.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintMessages(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgGetSlotDataFromEthResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgGetSlotDataFromEthResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgGetSlotDataFromEthResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitSlotDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitSlotDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitSlotDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintMessages(dAtA []byte, offset int, v uint64) int {
	offset -= sovMessages(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgGetSlotDataFromEth) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ContractAddress)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	if m.Height != 0 {
		n += 1 + sovMessages(uint64(m.Height))
	}
	l = len(m.Slot)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	return n
}

func (m *MsgSubmitSlotData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.SlotData != nil {
		l = m.SlotData.Size()
		n += 1 + l + sovMessages(uint64(l))
	}
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovMessages(uint64(l))
	}
	return n
}

func (m *MsgGetSlotDataFromEthResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitSlotDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovMessages(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMessages(x uint64) (n int) {
	return sovMessages(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgGetSlotDataFromEth) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGetSlotDataFromEth: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGetSlotDataFromEth: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Slot", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Slot = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitSlotData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitSlotData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitSlotData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SlotData", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.SlotData == nil {
				m.SlotData = &SlotData{}
			}
			if err := m.SlotData.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMessages
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMessages
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgGetSlotDataFromEthResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgGetSlotDataFromEthResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgGetSlotDataFromEthResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitSlotDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitSlotDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitSlotDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipMessages(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMessages
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMessages(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMessages
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMessages
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMessages
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMessages
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMessages
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMessages        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMessages          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMessages = fmt.Errorf("proto: unexpected end of group")
)

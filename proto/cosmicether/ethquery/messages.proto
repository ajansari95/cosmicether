syntax = "proto3";
package cosmicether.ethquery;

import "cosmicether/ethquery/ethquery.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/ajansari95/cosmicether/x/ethquery/types";

service Msg {
  // SubmitQueryResponse defines a method for submit query responses.
  rpc SubmitQueryResponse(MsgSubmitQueryResponse) returns (MsgSubmitQueryResponseResponse) {}
}

message MsgSubmitQueryResponse {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = true;

  string query_id = 1 [(gogoproto.moretags) = "yaml:\"query_id\""];
  bytes result = 2 [(gogoproto.moretags) = "yaml:\"result\""];
  bytes proof_ops = 3 [(gogoproto.moretags) = "yaml:\"proof\""];
  int64 height = 5 [(gogoproto.moretags) = "yaml:\"height\""];
  string from_address = 6 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// MsgSubmitQueryResponseResponse defines the MsgSubmitQueryResponse response
// type.
message MsgSubmitQueryResponseResponse {}

message MsgSubmitBlockHash {}
